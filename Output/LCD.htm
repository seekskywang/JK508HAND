<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\..\Output\LCD.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\..\Output\LCD.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Aug 17 14:39:24 2021
<BR><P>
<H3>Maximum Stack Usage =        540 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Key_Function &rArr; Key_Handle &rArr; ENTER_HANDLE &rArr; graph_his &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3e]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3e]">ADC_IRQHandler</a><BR>
 <LI><a href="#[26]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">BusFault_Handler</a><BR>
 <LI><a href="#[25]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">MemManage_Handler</a><BR>
 <LI><a href="#[27]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3e]">ADC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[26]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[40]">CAN1_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[41]">CAN1_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[42]">CAN1_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3f]">CAN1_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6c]">CAN2_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6d]">CAN2_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6e]">CAN2_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6b]">CAN2_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7b]">CRYP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7a]">DCMI_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[37]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[38]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3a]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3b]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3c]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3d]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5b]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[86]">DMA2D_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[64]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[65]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[66]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[67]">DMA2_Stream3_IRQHandler</a> from bsp_sdio_sd.o(i.DMA2_Stream3_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[68]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[70]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[71]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[72]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[29]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[69]">ETH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6a]">ETH_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[32]">EXTI0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[54]">EXTI15_10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[33]">EXTI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[34]">EXTI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[35]">EXTI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[36]">EXTI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[43]">EXTI9_5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[30]">FLASH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5c]">FMC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7d]">FPU_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7c]">HASH_RNG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[24]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4c]">I2C1_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4b]">I2C1_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4e]">I2C2_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4d]">I2C2_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[75]">I2C3_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[74]">I2C3_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[85]">LTDC_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[84]">LTDC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[25]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[23]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6f]">OTG_FS_IRQHandler</a> from stm32f4xx_it.o(i.OTG_FS_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[56]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[77]">OTG_HS_EP1_IN_IRQHandler</a> from usb_bsp.o(i.OTG_HS_EP1_IN_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[76]">OTG_HS_EP1_OUT_IRQHandler</a> from usb_bsp.o(i.OTG_HS_EP1_OUT_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[79]">OTG_HS_IRQHandler</a> from usb_bsp.o(i.OTG_HS_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[78]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2d]">PVD_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2a]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[31]">RCC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[55]">RTC_Alarm_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2f]">RTC_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[22]">Reset_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[83]">SAI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5d]">SDIO_IRQHandler</a> from bsp_sdio_sd.o(i.SDIO_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4f]">SPI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[50]">SPI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5f]">SPI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[80]">SPI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[81]">SPI5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[82]">SPI6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[28]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2b]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[88]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[2e]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[44]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[47]">TIM1_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[46]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[45]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[48]">TIM2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[49]">TIM3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4a]">TIM4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5e]">TIM5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[62]">TIM6_DAC_IRQHandler</a> from bsp_basic_tim.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[63]">TIM7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[57]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5a]">TIM8_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[59]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[58]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[21]">TP_Adjust</a> from touchscreen.o(i.TP_Adjust) referenced 2 times from touchscreen.o(.data)
 <LI><a href="#[1f]">TP_Init</a> from touchscreen.o(i.TP_Init) referenced 2 times from touchscreen.o(.data)
 <LI><a href="#[20]">TP_Scan</a> from touchscreen.o(i.TP_Scan) referenced 2 times from touchscreen.o(.data)
 <LI><a href="#[60]">UART4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[61]">UART5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7e]">UART7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7f]">UART8_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[51]">USART1_IRQHandler</a> from stm32f4xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[52]">USART2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[53]">USART3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[73]">USART6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1]">USBD_DataInStage</a> from usbd_core.o(i.USBD_DataInStage) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[0]">USBD_DataOutStage</a> from usbd_core.o(i.USBD_DataOutStage) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[9]">USBD_DevConnected</a> from usbd_core.o(i.USBD_DevConnected) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[a]">USBD_DevDisconnected</a> from usbd_core.o(i.USBD_DevDisconnected) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[15]">USBD_HID_DataIn</a> from usbd_hid_core.o(i.USBD_HID_DataIn) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[16]">USBD_HID_DataOut</a> from usbd_hid_core.o(i.USBD_HID_DataOut) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[13]">USBD_HID_DeInit</a> from usbd_hid_core.o(i.USBD_HID_DeInit) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[17]">USBD_HID_GetCfgDesc</a> from usbd_hid_core.o(i.USBD_HID_GetCfgDesc) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[12]">USBD_HID_Init</a> from usbd_hid_core.o(i.USBD_HID_Init) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[14]">USBD_HID_Setup</a> from usbd_hid_core.o(i.USBD_HID_Setup) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[7]">USBD_IsoINIncomplete</a> from usbd_core.o(i.USBD_IsoINIncomplete) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[8]">USBD_IsoOUTIncomplete</a> from usbd_core.o(i.USBD_IsoOUTIncomplete) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[4]">USBD_Reset</a> from usbd_core.o(i.USBD_Reset) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[6]">USBD_Resume</a> from usbd_core.o(i.USBD_Resume) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[3]">USBD_SOF</a> from usbd_core.o(i.USBD_SOF) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[2]">USBD_SetupStage</a> from usbd_core.o(i.USBD_SetupStage) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[5]">USBD_Suspend</a> from usbd_core.o(i.USBD_Suspend) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[1d]">USBD_USR_ConfigStrDescriptor</a> from usbd_desc.o(i.USBD_USR_ConfigStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[d]">USBD_USR_DeviceConfigured</a> from usbd_usr.o(i.USBD_USR_DeviceConfigured) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[10]">USBD_USR_DeviceConnected</a> from usbd_usr.o(i.USBD_USR_DeviceConnected) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[18]">USBD_USR_DeviceDescriptor</a> from usbd_desc.o(i.USBD_USR_DeviceDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[11]">USBD_USR_DeviceDisconnected</a> from usbd_usr.o(i.USBD_USR_DeviceDisconnected) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[c]">USBD_USR_DeviceReset</a> from usbd_usr.o(i.USBD_USR_DeviceReset) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[f]">USBD_USR_DeviceResumed</a> from usbd_usr.o(i.USBD_USR_DeviceResumed) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[e]">USBD_USR_DeviceSuspended</a> from usbd_usr.o(i.USBD_USR_DeviceSuspended) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[b]">USBD_USR_Init</a> from usbd_usr.o(i.USBD_USR_Init) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[1e]">USBD_USR_InterfaceStrDescriptor</a> from usbd_desc.o(i.USBD_USR_InterfaceStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[19]">USBD_USR_LangIDStrDescriptor</a> from usbd_desc.o(i.USBD_USR_LangIDStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[1a]">USBD_USR_ManufacturerStrDescriptor</a> from usbd_desc.o(i.USBD_USR_ManufacturerStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[1b]">USBD_USR_ProductStrDescriptor</a> from usbd_desc.o(i.USBD_USR_ProductStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[1c]">USBD_USR_SerialStrDescriptor</a> from usbd_desc.o(i.USBD_USR_SerialStrDescriptor) referenced 2 times from usbd_desc.o(.data)
 <LI><a href="#[27]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2c]">WWDG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[89]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[8b]">_sbackspace</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[8a]">_sgetc</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[8e]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[8d]">fputc</a> from bsp_debug_usart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[8c]">isspace</a> from isspace_o.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[87]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[89]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[293]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[8f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ac]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[294]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[295]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[296]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[297]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[298]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[22]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[299]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[29a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
</UL>

<P><STRONG><a name="[281]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data_Man
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data
</UL>

<P><STRONG><a name="[29b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[173]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_disp
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[166]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[172]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[234]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Handle
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>

<P><STRONG><a name="[171]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data_Man
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[97]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[a1]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Adjust
</UL>

<P><STRONG><a name="[152]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_disp
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_off
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[29c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[28b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[29d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[29e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[29f]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__strtod_int</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[99]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[2a0]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[2a1]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[9c]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[aa]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[288]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[90]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2a2]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[8c]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[a5]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[af]"></a>_scanf_really_real</STRONG> (Thumb, 556 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[8a]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[8b]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[a8]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[b1]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[ae]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[2a3]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2a4]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>ACC_HANDLE</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, bsp_key.o(i.ACC_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ACC_HANDLE &rArr; page_home &rArr; Disp_Type &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1fe]"></a>ADC_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[1f9]"></a>ADC_CommonInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_adc.o(i.ADC_CommonInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_CommonInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[1fd]"></a>ADC_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[1fc]"></a>ADC_DMARequestAfterLastTransferCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_DMARequestAfterLastTransferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[1fa]"></a>ADC_Init</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f4xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[1fb]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f4xx_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[1ff]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_SoftwareStartConv))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>

<P><STRONG><a name="[250]"></a>AVGCAL</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, main.o(i.AVGCAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AVGCAL
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
</UL>

<P><STRONG><a name="[b7]"></a>BACK_HANDLE</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, bsp_key.o(i.BACK_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = BACK_HANDLE &rArr; del_num &rArr; input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_search
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[ba]"></a>BEEPCHECK</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, main.o(i.BEEPCHECK))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
</UL>

<P><STRONG><a name="[bc]"></a>Beep_GPIO_Config</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bsp_beep.o(i.Beep_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Beep_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>ButtonSound</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp_key.o(i.ButtonSound))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ButtonSound &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichSml
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichMid
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichBig
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[c0]"></a>CH376ByteLocate</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, filesys.o(i.CH376ByteLocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CH376ByteLocate &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[c5]"></a>CH376ByteWrite</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, filesys.o(i.CH376ByteWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CH376ByteWrite &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteReqBlock
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[c7]"></a>CH376DiskConnect</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, filesys.o(i.CH376DiskConnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CH376DiskConnect &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376GetIntStatus
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query376Interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udisk_scan
</UL>

<P><STRONG><a name="[cb]"></a>CH376DiskMount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, filesys.o(i.CH376DiskMount))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CH376DiskMount &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udisk_scan
</UL>

<P><STRONG><a name="[cc]"></a>CH376FileClose</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, filesys.o(i.CH376FileClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CH376FileClose &rArr; CH376SendCmdDatWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[ce]"></a>CH376FileCreate</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, filesys.o(i.CH376FileCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = CH376FileCreate &rArr; CH376SetFileName &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreatePath
</UL>

<P><STRONG><a name="[d0]"></a>CH376FileCreatePath</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, filesys.o(i.CH376FileCreatePath))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = CH376FileCreatePath &rArr; CH376FileOpenDir &rArr; CH376FileOpen &rArr; CH376SetFileName &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SeparatePath
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpenDir
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[d3]"></a>CH376FileOpen</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, filesys.o(i.CH376FileOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = CH376FileOpen &rArr; CH376SetFileName &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteVar32
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpenDir
</UL>

<P><STRONG><a name="[d2]"></a>CH376FileOpenDir</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, filesys.o(i.CH376FileOpenDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = CH376FileOpenDir &rArr; CH376FileOpen &rArr; CH376SetFileName &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpenPath
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreatePath
</UL>

<P><STRONG><a name="[d5]"></a>CH376FileOpenPath</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, filesys.o(i.CH376FileOpenPath))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = CH376FileOpenPath &rArr; CH376FileOpenDir &rArr; CH376FileOpen &rArr; CH376SetFileName &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpenDir
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[c9]"></a>CH376GetIntStatus</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, filesys.o(i.CH376GetIntStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376DiskConnect
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
</UL>

<P><STRONG><a name="[d7]"></a>CH376Read32bitDat</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, filesys.o(i.CH376Read32bitDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CH376Read32bitDat &rArr; xReadCH376Data &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar32
</UL>

<P><STRONG><a name="[d8]"></a>CH376ReadVar32</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, filesys.o(i.CH376ReadVar32))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CH376ReadVar32 &rArr; CH376Read32bitDat &rArr; xReadCH376Data &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376Read32bitDat
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
</UL>

<P><STRONG><a name="[d9]"></a>CH376ReadVar8</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, filesys.o(i.CH376ReadVar8))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CH376ReadVar8 &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
</UL>

<P><STRONG><a name="[cd]"></a>CH376SendCmdDatWaitInt</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, filesys.o(i.CH376SendCmdDatWaitInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CH376SendCmdDatWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileClose
</UL>

<P><STRONG><a name="[ca]"></a>CH376SendCmdWaitInt</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, filesys.o(i.CH376SendCmdWaitInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376DiskMount
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376DiskConnect
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpen
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreate
</UL>

<P><STRONG><a name="[d1]"></a>CH376SeparatePath</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, filesys.o(i.CH376SeparatePath))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreatePath
</UL>

<P><STRONG><a name="[cf]"></a>CH376SetFileName</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, filesys.o(i.CH376SetFileName))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CH376SetFileName &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteVar32
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar8
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar32
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpen
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreate
</UL>

<P><STRONG><a name="[c6]"></a>CH376WriteReqBlock</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, filesys.o(i.CH376WriteReqBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CH376WriteReqBlock &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
</UL>

<P><STRONG><a name="[d4]"></a>CH376WriteVar32</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, filesys.o(i.CH376WriteVar32))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CH376WriteVar32 &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEndCH376Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpen
</UL>

<P><STRONG><a name="[da]"></a>CH376_GPIO_Init</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, ch376.o(i.CH376_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CH376_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[236]"></a>CRC16</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, main.o(i.CRC16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUnit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTctype
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSTctype
</UL>

<P><STRONG><a name="[e0]"></a>ChannelSwtichBig</STRONG> (Thumb, 1814 bytes, Stack size 32 bytes, touchscreen.o(i.ChannelSwtichBig))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ChannelSwtichBig &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_48
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
</UL>

<P><STRONG><a name="[e5]"></a>ChannelSwtichMid</STRONG> (Thumb, 1902 bytes, Stack size 40 bytes, touchscreen.o(i.ChannelSwtichMid))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ChannelSwtichMid &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_M
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
</UL>

<P><STRONG><a name="[e7]"></a>ChannelSwtichSml</STRONG> (Thumb, 1892 bytes, Stack size 40 bytes, touchscreen.o(i.ChannelSwtichSml))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ChannelSwtichSml &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
</UL>

<P><STRONG><a name="[e9]"></a>Check_limits</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, main.o(i.Check_limits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Check_limits
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
</UL>

<P><STRONG><a name="[f1]"></a>DCD_EP_Close</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usb_dcd.o(i.DCD_EP_Close))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DCD_EP_Close &rArr; USB_OTG_EPDeactivate
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPDeactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_DeInit
</UL>

<P><STRONG><a name="[f3]"></a>DCD_EP_ClrStall</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, usb_dcd.o(i.DCD_EP_ClrStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DCD_EP_ClrStall &rArr; USB_OTG_EPClearStall
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPClearStall
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
</UL>

<P><STRONG><a name="[f5]"></a>DCD_EP_Flush</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usb_dcd.o(i.DCD_EP_Flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DCD_EP_Flush &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_DataIn
</UL>

<P><STRONG><a name="[f8]"></a>DCD_EP_Open</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, usb_dcd.o(i.DCD_EP_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DCD_EP_Open &rArr; USB_OTG_EPActivate
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Reset
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_Init
</UL>

<P><STRONG><a name="[fa]"></a>DCD_EP_PrepareRx</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, usb_dcd.o(i.DCD_EP_PrepareRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPStartXfer
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueRx
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[276]"></a>DCD_EP_SetAddress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_dcd.o(i.DCD_EP_SetAddress))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[fd]"></a>DCD_EP_Stall</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, usb_dcd.o(i.DCD_EP_Stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DCD_EP_Stall
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPSetStall
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[ff]"></a>DCD_EP_Tx</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usb_dcd.o(i.DCD_EP_Tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPStartXfer
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueSendData
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SendReport
</UL>

<P><STRONG><a name="[10a]"></a>DCD_Init</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, usb_dcd.o(i.DCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DCD_Init &rArr; USB_OTG_CoreInitDev &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SetCurrentMode
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SelectCore
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableGlobalInt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DisableGlobalInt
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitDev
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
</UL>

<P><STRONG><a name="[112]"></a>DISP_AVG</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_AVG))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DISP_AVG &rArr; DISP_SINS &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SINS
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Type
</UL>

<P><STRONG><a name="[e6]"></a>DISP_CNL_M</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_CNL_M))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DISP_CNL_M &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichMid
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[e8]"></a>DISP_CNL_S</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_CNL_S))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DISP_CNL_S &rArr; DISP_INPUT &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INPUT
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichSml
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTime
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_search
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPPROCESS
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[116]"></a>DISP_INPUT</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_INPUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DISP_INPUT &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChinese
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
</UL>

<P><STRONG><a name="[118]"></a>DISP_INS</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_INS))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DISP_INS &rArr; DISP_SINS &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SINS
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
</UL>

<P><STRONG><a name="[114]"></a>DISP_SINS</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_SINS))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DISP_SINS &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChinese
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_AVG
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INS
</UL>

<P><STRONG><a name="[119]"></a>DISP_TEMP_L</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_TEMP_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DISP_TEMP_L &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Type
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
</UL>

<P><STRONG><a name="[11b]"></a>DISP_TEMP_M</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_TEMP_M))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DISP_TEMP_M &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
</UL>

<P><STRONG><a name="[11c]"></a>DISP_TEMP_S</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, bsp_lcd.o(i.DISP_TEMP_S))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = DISP_TEMP_S &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
</UL>

<P><STRONG><a name="[11d]"></a>DMA2D_DeInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_dma2d.o(i.DMA2D_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2D_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[1c4]"></a>DMA2D_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_dma2d.o(i.DMA2D_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[1c2]"></a>DMA2D_Init</STRONG> (Thumb, 170 bytes, Stack size 12 bytes, stm32f4xx_dma2d.o(i.DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA2D_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[1c3]"></a>DMA2D_StartTransfer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_dma2d.o(i.DMA2D_StartTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[67]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_sdio_sd.o(i.DMA2_Stream3_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[217]"></a>DMA_ClearFlag</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[1f8]"></a>DMA_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[218]"></a>DMA_DeInit</STRONG> (Thumb, 272 bytes, Stack size 28 bytes, stm32f4xx_dma.o(i.DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[21a]"></a>DMA_FlowControllerConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_FlowControllerConfig))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[219]"></a>DMA_ITConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[1f7]"></a>DMA_Init</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[120]"></a>DOT_HANDLE</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bsp_key.o(i.DOT_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = DOT_HANDLE &rArr; input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[122]"></a>DOWN_HANDLE</STRONG> (Thumb, 10656 bytes, Stack size 184 bytes, bsp_key.o(i.DOWN_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = DOWN_HANDLE &rArr; Draw_His_Index &rArr; Read_Index &rArr; SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_48
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_M
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_off
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_on
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawType
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[29]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[134]"></a>Debug_USART_Config</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, bsp_debug_usart.o(i.Debug_USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Debug_USART_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>Delay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376GetIntStatus
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[13a]"></a>Disp_Factory</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, factory.o(i.Disp_Factory))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Disp_Factory &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
</UL>

<P><STRONG><a name="[13b]"></a>Disp_Search_Info</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, fileoperate.o(i.Disp_Search_Info))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Disp_Search_Info &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Handle
</UL>

<P><STRONG><a name="[13c]"></a>Disp_Type</STRONG> (Thumb, 1540 bytes, Stack size 40 bytes, home.o(i.Disp_Type))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Disp_Type &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_AVG
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTctype
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSTctype
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[13d]"></a>DrawBattery</STRONG> (Thumb, 364 bytes, Stack size 24 bytes, bsp_lcd.o(i.DrawBattery))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DrawBattery &rArr; DrawCharge &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCharge
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[140]"></a>DrawBrt</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, bsp_lcd.o(i.DrawBrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DrawBrt &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[13e]"></a>DrawCharge</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, bsp_lcd.o(i.DrawCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawCharge &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBattery
</UL>

<P><STRONG><a name="[141]"></a>DrawDim</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, bsp_lcd.o(i.DrawDim))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawDim &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[142]"></a>DrawGridLine</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, bsp_lcd.o(i.DrawGridLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTime
</UL>

<P><STRONG><a name="[e4]"></a>DrawInstruction</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_lcd.o(i.DrawInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INS
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichSml
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichMid
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichBig
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_on
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[145]"></a>DrawMenu</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, bsp_lcd.o(i.DrawMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk1
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhishmenu
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhisgraph
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawformatcon
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawType
</UL>

<P><STRONG><a name="[148]"></a>DrawPowOff</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, bsp_lcd.o(i.DrawPowOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = DrawPowOff &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffHandle
</UL>

<P><STRONG><a name="[14b]"></a>DrawSD1</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, bsp_lcd.o(i.DrawSD1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawSD1 &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
</UL>

<P><STRONG><a name="[14c]"></a>DrawSD2</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, bsp_lcd.o(i.DrawSD2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawSD2 &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
</UL>

<P><STRONG><a name="[14d]"></a>DrawTime</STRONG> (Thumb, 276 bytes, Stack size 120 bytes, bsp_rtc.o(i.DrawTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = DrawTime &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGridLine
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
</UL>

<P><STRONG><a name="[14e]"></a>DrawTouch</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, bsp_lcd.o(i.DrawTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DrawTouch &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[126]"></a>DrawType</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, bsp_key.o(i.DrawType))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = DrawType &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[146]"></a>DrawUdisk1</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, bsp_lcd.o(i.DrawUdisk1))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawUdisk1 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udisk_scan
</UL>

<P><STRONG><a name="[147]"></a>DrawUdisk2</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, bsp_lcd.o(i.DrawUdisk2))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udisk_scan
</UL>

<P><STRONG><a name="[14f]"></a>DrawUnit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, bsp_lcd.o(i.DrawUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DrawUnit &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[150]"></a>Draw_Frame</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, home.o(i.Draw_Frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Draw_Frame &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
</UL>

<P><STRONG><a name="[151]"></a>Draw_His_Graph</STRONG> (Thumb, 4904 bytes, Stack size 176 bytes, history.o(i.Draw_His_Graph))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGridLine
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
</UL>

<P><STRONG><a name="[133]"></a>Draw_His_Index</STRONG> (Thumb, 306 bytes, Stack size 72 bytes, fileoperate.o(i.Draw_His_Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Draw_His_Index &rArr; Read_Index &rArr; SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Index
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[154]"></a>Draw_graph</STRONG> (Thumb, 3854 bytes, Stack size 48 bytes, graph.o(i.Draw_graph))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Draw_graph &rArr; LCD_DrawUniLine
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
</UL>

<P><STRONG><a name="[155]"></a>Drawcalmenu</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawcalmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Drawcalmenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
</UL>

<P><STRONG><a name="[156]"></a>Drawdate</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, bsp_lcd.o(i.Drawdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Drawdate &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[157]"></a>Drawdate2</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, bsp_lcd.o(i.Drawdate2))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Drawdate2 &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[158]"></a>Drawformatcon</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawformatcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Drawformatcon &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[159]"></a>Drawgraphmenu</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawgraphmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Drawgraphmenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
</UL>

<P><STRONG><a name="[15a]"></a>Drawgsethmenu</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawgsethmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Drawgsethmenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
</UL>

<P><STRONG><a name="[15b]"></a>Drawhisgraph</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawhisgraph))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Drawhisgraph &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
</UL>

<P><STRONG><a name="[15c]"></a>Drawhisgsethmenu</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, bsp_lcd.o(i.Drawhisgsethmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Drawhisgsethmenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
</UL>

<P><STRONG><a name="[15d]"></a>Drawhishmenu</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawhishmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Drawhishmenu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[128]"></a>Drawhomemenu</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, bsp_lcd.o(i.Drawhomemenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Drawhomemenu &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[15e]"></a>Drawlang</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawlang))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Drawlang &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[15f]"></a>Drawsetmenu</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, bsp_lcd.o(i.Drawsetmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Drawsetmenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
</UL>

<P><STRONG><a name="[160]"></a>Drawsptmenu</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawsptmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Drawsptmenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
</UL>

<P><STRONG><a name="[161]"></a>Drawsysinfomenu</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawsysinfomenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Drawsysinfomenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
</UL>

<P><STRONG><a name="[162]"></a>Drawsysmenu</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, bsp_lcd.o(i.Drawsysmenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Drawsysmenu &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
</UL>

<P><STRONG><a name="[163]"></a>Drawtime</STRONG> (Thumb, 134 bytes, Stack size 20 bytes, bsp_lcd.o(i.Drawtime))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Drawtime &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[164]"></a>Drawtime2</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, bsp_lcd.o(i.Drawtime2))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Drawtime2 &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[165]"></a>ENTER_HANDLE</STRONG> (Thumb, 10254 bytes, Stack size 168 bytes, bsp_key.o(i.ENTER_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = ENTER_HANDLE &rArr; graph_his &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_48
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_M
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawlang
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTouch
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDim
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBrt
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Handle
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_on
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawType
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[16c]"></a>ESC_HANDLE</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, bsp_key.o(i.ESC_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = ESC_HANDLE &rArr; page_his &rArr; Draw_His_Index &rArr; Read_Index &rArr; SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[16e]"></a>EXPPROCESS</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, bsp_key.o(i.EXPPROCESS))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = EXPPROCESS &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[16f]"></a>EXPSDDATA</STRONG> (Thumb, 516 bytes, Stack size 264 bytes, bsp_key.o(i.EXPSDDATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = EXPSDDATA &rArr; CH376FileCreatePath &rArr; CH376FileOpenDir &rArr; CH376FileOpen &rArr; CH376SetFileName &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_His_Data
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpenPath
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreatePath
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileClose
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPPROCESS
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[1a8]"></a>EXTI_DeInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[208]"></a>FMC_GetFlagStatus</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[209]"></a>FMC_SDRAMCmdConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMCmdConfig))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[206]"></a>FMC_SDRAMInit</STRONG> (Thumb, 284 bytes, Stack size 20 bytes, stm32f4xx_fmc.o(i.FMC_SDRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_SDRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[20a]"></a>FMC_SetRefreshCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(i.FMC_SetRefreshCount))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[174]"></a>FUNC1_HANDLE</STRONG> (Thumb, 1786 bytes, Stack size 40 bytes, bsp_key.o(i.FUNC1_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = FUNC1_HANDLE &rArr; EXPSDDATA &rArr; CH376FileCreatePath &rArr; CH376FileOpenDir &rArr; CH376FileOpen &rArr; CH376SetFileName &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhishmenu
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_year
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_sec
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_hour
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_day
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Block_Rec
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Erase
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[17f]"></a>FUNC2_HANDLE</STRONG> (Thumb, 1482 bytes, Stack size 40 bytes, bsp_key.o(i.FUNC2_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = FUNC2_HANDLE &rArr; page_graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhishmenu
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_year
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_sec
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_hour
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_day
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawformatcon
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[186]"></a>FUNC3_HANDLE</STRONG> (Thumb, 1412 bytes, Stack size 40 bytes, bsp_key.o(i.FUNC3_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = FUNC3_HANDLE &rArr; graph_his &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_mon
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_min
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Adjust
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data_Man
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Block_Rec
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[18a]"></a>FUNC4_HANDLE</STRONG> (Thumb, 1182 bytes, Stack size 32 bytes, bsp_key.o(i.FUNC4_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = FUNC4_HANDLE &rArr; graph_his &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_mon
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_min
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[18f]"></a>FUNC5_HANDLE</STRONG> (Thumb, 7988 bytes, Stack size 40 bytes, bsp_key.o(i.FUNC5_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = FUNC5_HANDLE &rArr; graph_his &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_48
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_M
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Type
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime2
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate2
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawType
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[bd]"></a>GPIO_Init</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Init
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GPIO_Config
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GPIO_Config
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_GPIO_Config
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[dd]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
</UL>

<P><STRONG><a name="[1c0]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query376Interrupt
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[1c8]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_AD
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUnit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTctype
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSTctype
</UL>

<P><STRONG><a name="[19e]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_AD
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUnit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTctype
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSTctype
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[24]"></a>HardFault_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[19b]"></a>InitBrt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, main.o(i.InitBrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = InitBrt &rArr; TIM_PWMOUTPUT_Config &rArr; TIM_OC3Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
</UL>

<P><STRONG><a name="[19d]"></a>Init_CH376</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ch376.o(i.Init_CH376))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init_CH376 &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19f]"></a>Input_end</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, bsp_key.o(i.Input_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Input_end &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY9_HANDLE
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY8_HANDLE
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_HANDLE
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_HANDLE
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_HANDLE
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_HANDLE
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_HANDLE
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_HANDLE
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_HANDLE
</UL>

<P><STRONG><a name="[1a0]"></a>Input_start</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, bsp_key.o(i.Input_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Input_start &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY9_HANDLE
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY8_HANDLE
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_HANDLE
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_HANDLE
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_HANDLE
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_HANDLE
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_HANDLE
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_HANDLE
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_HANDLE
</UL>

<P><STRONG><a name="[192]"></a>JumpBoot</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, main.o(i.JumpBoot))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = JumpBoot &rArr; RTC_DeInit &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_DeInit
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WakeUpCmd
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[1ad]"></a>KEY0_HANDLE</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, bsp_key.o(i.KEY0_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY0_HANDLE &rArr; Input_start &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1af]"></a>KEY1_HANDLE</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, bsp_key.o(i.KEY1_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY1_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1b1]"></a>KEY2_HANDLE</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, bsp_key.o(i.KEY2_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY2_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1b2]"></a>KEY3_HANDLE</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, bsp_key.o(i.KEY3_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY3_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1b3]"></a>KEY4_HANDLE</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, bsp_key.o(i.KEY4_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY4_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1b4]"></a>KEY5_HANDLE</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, bsp_key.o(i.KEY5_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY5_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1b5]"></a>KEY6_HANDLE</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, bsp_key.o(i.KEY6_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY6_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1b6]"></a>KEY7_HANDLE</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, bsp_key.o(i.KEY7_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY7_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1b7]"></a>KEY8_HANDLE</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, bsp_key.o(i.KEY8_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY8_HANDLE &rArr; XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1b8]"></a>KEY9_HANDLE</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, bsp_key.o(i.KEY9_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = KEY9_HANDLE &rArr; Input_start &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1c1]"></a>Key_Delay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_key.o(i.Key_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Key_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[1b9]"></a>Key_Function</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, bsp_key.o(i.Key_Function))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = Key_Function &rArr; Key_Handle &rArr; ENTER_HANDLE &rArr; graph_his &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1bb]"></a>Key_GPIO_Config</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, bsp_key.o(i.Key_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Key_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ba]"></a>Key_Handle</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, bsp_key.o(i.Key_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = Key_Handle &rArr; ENTER_HANDLE &rArr; graph_his &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY9_HANDLE
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY8_HANDLE
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_HANDLE
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_HANDLE
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_HANDLE
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_HANDLE
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_HANDLE
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_HANDLE
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOT_HANDLE
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BACK_HANDLE
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_HANDLE
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
</UL>

<P><STRONG><a name="[1bf]"></a>Key_Scan</STRONG> (Thumb, 1412 bytes, Stack size 48 bytes, bsp_key.o(i.Key_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Key_Scan &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[149]"></a>LCD_Clear</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, bsp_lcd.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCD_Clear &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_StartTransfer
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Init
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_GetFlagStatus
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Adjust
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPowOff
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
</UL>

<P><STRONG><a name="[113]"></a>LCD_DisplayChar_48</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_lcd.o(i.LCD_DisplayChar_48))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_DisplayChar_48 &rArr; LCD_DrawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_48
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_M
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_AVG
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_S
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_M
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INS
</UL>

<P><STRONG><a name="[115]"></a>LCD_DisplayChinese</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, bsp_lcd.o(i.LCD_DisplayChinese))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawChinese
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_48
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_M
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_S
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_M
</UL>

<P><STRONG><a name="[124]"></a>LCD_DisplayStringLine</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bsp_lcd.o(i.LCD_DisplayStringLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_disp
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawcalmenu
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhishmenu
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhisgraph
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_off
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhisgsethmenu
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawgsethmenu
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawgraphmenu
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysinfomenu
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsptmenu
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Factory
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime2
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawlang
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate2
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTouch
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDim
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBrt
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Search_Info
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPowOff
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawformatcon
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_off
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_on
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawType
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[e3]"></a>LCD_DisplayStringLine_48</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bsp_lcd.o(i.LCD_DisplayStringLine_48))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LCD_DisplayStringLine_48 &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichBig
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[1c5]"></a>LCD_DrawChar</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, bsp_lcd.o(i.LCD_DrawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar_48
</UL>

<P><STRONG><a name="[117]"></a>LCD_DrawChinese</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, bsp_lcd.o(i.LCD_DrawChinese))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_DrawChinese
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChinese
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_SINS
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INPUT
</UL>

<P><STRONG><a name="[14a]"></a>LCD_DrawCircle</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, bsp_lcd.o(i.LCD_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_DrawCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Drow_Touch_Point
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPowOff
</UL>

<P><STRONG><a name="[11a]"></a>LCD_DrawFullRect</STRONG> (Thumb, 100 bytes, Stack size 72 bytes, bsp_lcd.o(i.LCD_DrawFullRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_StartTransfer
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Init
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_GetFlagStatus
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_off
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGridLine
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD1
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Search_Info
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk1
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTime
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPowOff
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBattery
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_S
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_M
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCharge
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_off
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_on
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPPROCESS
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[144]"></a>LCD_DrawLine</STRONG> (Thumb, 122 bytes, Stack size 72 bytes, bsp_lcd.o(i.LCD_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_StartTransfer
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_Init
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_GetFlagStatus
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGridLine
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD1
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Frame
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Drow_Touch_Point
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>

<P><STRONG><a name="[143]"></a>LCD_DrawRect</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, bsp_lcd.o(i.LCD_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGridLine
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPPROCESS
</UL>

<P><STRONG><a name="[13f]"></a>LCD_DrawUniLine</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, bsp_lcd.o(i.LCD_DrawUniLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_DrawUniLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_graph
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD1
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Drow_Touch_Point
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk1
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBattery
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCharge
</UL>

<P><STRONG><a name="[1c9]"></a>LCD_Init</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, bsp_lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Cmd
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAIConfig
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAICmd
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LTDCCLKDivConfig
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d1]"></a>LCD_LayerInit</STRONG> (Thumb, 132 bytes, Stack size 72 bytes, bsp_lcd.o(i.LCD_LayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LCD_LayerInit &rArr; LTDC_LayerInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerInit
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>LCD_SetBackColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetBackColor))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_off
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Type
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Factory
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichSml
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichMid
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichBig
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTime
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_off
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_on
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_search
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPPROCESS
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawType
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[ea]"></a>LCD_SetColors</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetColors))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_off
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGridLine
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_graph
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD1
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Frame
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Drow_Touch_Point
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Search_Info
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk1
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTime
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPowOff
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBattery
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_S
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_M
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_limits
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawCharge
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_off
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_on
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPPROCESS
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[28c]"></a>LCD_SetLayer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetLayer))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>LCD_SetTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_lcd.o(i.LCD_SetTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_off
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Type
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Factory
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichSml
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichMid
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichBig
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTime
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_off
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_on
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_search
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_search
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPPROCESS
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawType
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[1d5]"></a>LCD_SetTransparency</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp_lcd.o(i.LCD_SetTransparency))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetTransparency
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
</UL>

<P><STRONG><a name="[1bd]"></a>LEFT_HANDLE</STRONG> (Thumb, 5594 bytes, Stack size 128 bytes, bsp_key.o(i.LEFT_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = LEFT_HANDLE &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_48
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_M
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1d0]"></a>LTDC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cf]"></a>LTDC_Init</STRONG> (Thumb, 156 bytes, Stack size 12 bytes, stm32f4xx_ltdc.o(i.LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LTDC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[1d6]"></a>LTDC_LayerAlpha</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerAlpha))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
</UL>

<P><STRONG><a name="[1d4]"></a>LTDC_LayerCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
</UL>

<P><STRONG><a name="[1d2]"></a>LTDC_LayerInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f4xx_ltdc.o(i.LTDC_LayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LTDC_LayerInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
</UL>

<P><STRONG><a name="[1d3]"></a>LTDC_ReloadConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(i.LTDC_ReloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
</UL>

<P><STRONG><a name="[25]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[137]"></a>NVIC_Init</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
</UL>

<P><STRONG><a name="[136]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
</UL>

<P><STRONG><a name="[28d]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.OTG_FS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = OTG_FS_IRQHandler &rArr; USBD_OTG_ISR_Handler &rArr; DCD_HandleInEP_ISR &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_bsp.o(i.OTG_HS_EP1_IN_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = OTG_HS_EP1_IN_IRQHandler &rArr; USBD_OTG_EP1IN_ISR_Handler &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_EP1IN_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_bsp.o(i.OTG_HS_EP1_OUT_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OTG_HS_EP1_OUT_IRQHandler &rArr; USBD_OTG_EP1OUT_ISR_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_EP1OUT_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_bsp.o(i.OTG_HS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = OTG_HS_IRQHandler &rArr; USBD_OTG_ISR_Handler &rArr; DCD_HandleInEP_ISR &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1dd]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1da]"></a>PowerOffHandle</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.PowerOffHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = PowerOffHandle &rArr; Write_His_Data_Man &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data_Man
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Block_Rec
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPowOff
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c6]"></a>PutPixel</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, bsp_lcd.o(i.PutPixel))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
</UL>

<P><STRONG><a name="[c8]"></a>Query376Interrupt</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ch376.o(i.Query376Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Query376Interrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376DiskConnect
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait376Interrupt
</UL>

<P><STRONG><a name="[db]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GPIO_Config
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GPIO_Config
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GPIO_Config
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
</UL>

<P><STRONG><a name="[11e]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_DeInit
</UL>

<P><STRONG><a name="[205]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[1dc]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[241]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[dc]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_PWMOUTPUT_Config
</UL>

<P><STRONG><a name="[202]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[1a6]"></a>RCC_DeInit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[25d]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[1ce]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1de]"></a>RCC_LSEConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[1cc]"></a>RCC_LTDCCLKDivConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LTDCCLKDivConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[1cd]"></a>RCC_PLLSAICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_PLLSAICmd))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[1cb]"></a>RCC_PLLSAIConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_PLLSAIConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[1a7]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[1df]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[1be]"></a>RIGHT_HANDLE</STRONG> (Thumb, 5620 bytes, Stack size 112 bytes, bsp_key.o(i.RIGHT_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = RIGHT_HANDLE &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_48
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_M
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[1db]"></a>RTC_CLK_Config</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_rtc.o(i.RTC_CLK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC_CLK_Config &rArr; RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a9]"></a>RTC_DeInit</STRONG> (Thumb, 168 bytes, Stack size 20 bytes, stm32f4xx_rtc.o(i.RTC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_DeInit &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[1e3]"></a>RTC_EnterInitMode</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
</UL>

<P><STRONG><a name="[1e7]"></a>RTC_ExitInitMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[1e4]"></a>RTC_GetDate</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
</UL>

<P><STRONG><a name="[1e6]"></a>RTC_GetTime</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
</UL>

<P><STRONG><a name="[1aa]"></a>RTC_ITConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(i.RTC_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[1e1]"></a>RTC_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
</UL>

<P><STRONG><a name="[28f]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e8]"></a>RTC_SetDate</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_year
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_mon
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_day
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_year
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_mon
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_day
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
</UL>

<P><STRONG><a name="[1ea]"></a>RTC_SetTime</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_sec
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_min
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_hour
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_sec
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_min
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_hour
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
</UL>

<P><STRONG><a name="[1eb]"></a>RTC_TimeAndDate_Set</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, bsp_rtc.o(i.RTC_TimeAndDate_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RTC_TimeAndDate_Set &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ed]"></a>RTC_TimeAndDate_Show</STRONG> (Thumb, 614 bytes, Stack size 144 bytes, bsp_rtc.o(i.RTC_TimeAndDate_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = RTC_TimeAndDate_Show &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e0]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ab]"></a>RTC_WakeUpCmd</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(i.RTC_WakeUpCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_WakeUpCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[1ec]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_year
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_sec
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_mon
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_min
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_hour
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_day
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_year
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_sec
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_mon
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_min
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_hour
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_day
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
</UL>

<P><STRONG><a name="[1ee]"></a>Read_Block_Rec</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fileoperate.o(i.Read_Block_Rec))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Read_Block_Rec &rArr; SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[290]"></a>Read_Flash_Init_Handle</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, main.o(i.Read_Flash_Init_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Read_Flash_Init_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[170]"></a>Read_His_Data</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, fileoperate.o(i.Read_His_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Read_His_Data &rArr; SD_ReadMultiBlocks &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
</UL>

<P><STRONG><a name="[153]"></a>Read_Index</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fileoperate.o(i.Read_Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Read_Index &rArr; SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Handle
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f3]"></a>Read_Sflag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, history.o(i.Read_Sflag))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Read_Sflag &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_flag
</UL>

<P><STRONG><a name="[1f5]"></a>Read_flag</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, main.o(i.Read_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Read_flag &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sflag
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ec]"></a>SDIO_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[21f]"></a>SDIO_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[21d]"></a>SDIO_ClockCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[221]"></a>SDIO_DMACmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
</UL>

<P><STRONG><a name="[198]"></a>SDIO_DataConfig</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_DataConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_DataConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[201]"></a>SDIO_DeInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[ed]"></a>SDIO_GetCommandResponse</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetCommandResponse))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[199]"></a>SDIO_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[21e]"></a>SDIO_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[215]"></a>SDIO_GetPowerState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[ee]"></a>SDIO_GetResponse</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_GetResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Erase
</UL>

<P><STRONG><a name="[5d]"></a>SDIO_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_sdio_sd.o(i.SDIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDIO_IRQHandler &rArr; SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[220]"></a>SDIO_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[20c]"></a>SDIO_Init</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, stm32f4xx_sdio.o(i.SDIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[19a]"></a>SDIO_ReadData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ReadData))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[197]"></a>SDIO_SendCommand</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Erase
</UL>

<P><STRONG><a name="[21c]"></a>SDIO_SetPowerState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_SetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[1ca]"></a>SDRAM_Init</STRONG> (Thumb, 94 bytes, Stack size 80 bytes, bsp_sdram.o(i.SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = SDRAM_Init &rArr; SDRAM_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMInit
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20b]"></a>SD_EnableWideBusOperation</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SD_EnableWideBusOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[17e]"></a>SD_Erase</STRONG> (Thumb, 268 bytes, Stack size 64 bytes, bsp_sdio_sd.o(i.SD_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SD_Erase &rArr; IsCardProgramming &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsCardProgramming
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[213]"></a>SD_GetCardInfo</STRONG> (Thumb, 614 bytes, Stack size 28 bytes, bsp_sdio_sd.o(i.SD_GetCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SD_GetCardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[20d]"></a>SD_GetState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_GetState &rArr; SD_SendStatus &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
</UL>

<P><STRONG><a name="[1f1]"></a>SD_GetStatus</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_GetStatus &rArr; SD_GetState &rArr; SD_SendStatus &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_His_Data
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data_Man
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Block_Rec
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Index
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Block_Rec
</UL>

<P><STRONG><a name="[20f]"></a>SD_Init</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCardInfo
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[212]"></a>SD_InitializeCards</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, bsp_sdio_sd.o(i.SD_InitializeCards))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_InitializeCards &rArr; CmdResp6Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetPowerState
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[216]"></a>SD_LowLevel_DMA_RxConfig</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, bsp_sdio_sd.o(i.SD_LowLevel_DMA_RxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
</UL>

<P><STRONG><a name="[21b]"></a>SD_LowLevel_DMA_TxConfig</STRONG> (Thumb, 130 bytes, Stack size 72 bytes, bsp_sdio_sd.o(i.SD_LowLevel_DMA_TxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
</UL>

<P><STRONG><a name="[210]"></a>SD_LowLevel_Init</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SD_LowLevel_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SD_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[211]"></a>SD_PowerON</STRONG> (Thumb, 468 bytes, Stack size 48 bytes, bsp_sdio_sd.o(i.SD_PowerON))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SD_PowerON &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SetPowerState
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClockCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[11f]"></a>SD_ProcessDMAIRQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bsp_sdio_sd.o(i.SD_ProcessDMAIRQ))
<BR><BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[203]"></a>SD_ProcessIRQSrc</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_ProcessIRQSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetITStatus
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_IRQHandler
</UL>

<P><STRONG><a name="[1ef]"></a>SD_ReadBlock</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, bsp_sdio_sd.o(i.SD_ReadBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Index
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Block_Rec
</UL>

<P><STRONG><a name="[1f2]"></a>SD_ReadMultiBlocks</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, bsp_sdio_sd.o(i.SD_ReadMultiBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SD_ReadMultiBlocks &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_His_Data
</UL>

<P><STRONG><a name="[214]"></a>SD_SelectDeselect</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_SelectDeselect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_SelectDeselect &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[20e]"></a>SD_SendStatus</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.SD_SendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_SendStatus &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>

<P><STRONG><a name="[222]"></a>SD_StopTransfer</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.SD_StopTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_StopTransfer &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
</UL>

<P><STRONG><a name="[1f0]"></a>SD_WaitWriteOperation</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.SD_WaitWriteOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_WaitWriteOperation &rArr; SD_StopTransfer &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_His_Data
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data_Man
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Block_Rec
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Index
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Block_Rec
</UL>

<P><STRONG><a name="[223]"></a>SD_WriteBlock</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, bsp_sdio_sd.o(i.SD_WriteBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SD_WriteBlock &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data_Man
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Block_Rec
</UL>

<P><STRONG><a name="[224]"></a>SD_WriteMultiBlocks</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, bsp_sdio_sd.o(i.SD_WriteMultiBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data_Man
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data
</UL>

<P><STRONG><a name="[df]"></a>SPI_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
</UL>

<P><STRONG><a name="[1f4]"></a>SPI_FLASH_BufferRead</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bsp_spi_flash.o(i.SPI_FLASH_BufferRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sflag
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_flag
</UL>

<P><STRONG><a name="[226]"></a>SPI_FLASH_BufferWrite</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, bsp_spi_flash.o(i.SPI_FLASH_BufferWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
</UL>

<P><STRONG><a name="[228]"></a>SPI_FLASH_Init</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, bsp_spi_flash.o(i.SPI_FLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SPI_FLASH_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227]"></a>SPI_FLASH_PageWrite</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, bsp_spi_flash.o(i.SPI_FLASH_PageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferWrite
</UL>

<P><STRONG><a name="[22b]"></a>SPI_FLASH_ReadDeviceID</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_FLASH_ReadDeviceID))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_FLASH_ReadDeviceID &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22c]"></a>SPI_FLASH_ReadID</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bsp_spi_flash.o(i.SPI_FLASH_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI_FLASH_ReadID &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22d]"></a>SPI_FLASH_SectorErase</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bsp_spi_flash.o(i.SPI_FLASH_SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SPI_FLASH_SectorErase &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
</UL>

<P><STRONG><a name="[225]"></a>SPI_FLASH_SendByte</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, bsp_spi_flash.o(i.SPI_FLASH_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadID
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadDeviceID
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>

<P><STRONG><a name="[22a]"></a>SPI_FLASH_WaitForWriteEnd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bsp_spi_flash.o(i.SPI_FLASH_WaitForWriteEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>

<P><STRONG><a name="[229]"></a>SPI_FLASH_WriteEnable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_FLASH_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>

<P><STRONG><a name="[22e]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>

<P><STRONG><a name="[231]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>

<P><STRONG><a name="[22f]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>

<P><STRONG><a name="[de]"></a>SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
</UL>

<P><STRONG><a name="[233]"></a>SPIx_ReadWriteByte</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ch376.o(i.SPIx_ReadWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Data
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xWriteCH376Cmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xReadCH376Data
</UL>

<P><STRONG><a name="[28]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>Save_flag</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, main.o(i.Save_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Type
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYCAL
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Save_Adjdata
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichSml
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichMid
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichBig
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_HANDLE
</UL>

<P><STRONG><a name="[16b]"></a>Search_Handle</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, fileoperate.o(i.Search_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Search_Handle &rArr; back_his &rArr; Draw_His_Index &rArr; Read_Index &rArr; SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_his
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Search_Info
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Index
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[235]"></a>SetSTctype</STRONG> (Thumb, 188 bytes, Stack size 88 bytes, bsp_basic_tim.o(i.SetSTctype))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = SetSTctype &rArr; Disp_Type &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Type
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[238]"></a>SetTctype</STRONG> (Thumb, 188 bytes, Stack size 88 bytes, bsp_basic_tim.o(i.SetTctype))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = SetTctype &rArr; Disp_Type &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Type
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[239]"></a>SetUnit</STRONG> (Thumb, 184 bytes, Stack size 88 bytes, bsp_basic_tim.o(i.SetUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SetUnit &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[2b]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[28e]"></a>SysTick_Init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, bsp_systick.o(i.SysTick_Init))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>SystemInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 442 bytes, Stack size 40 bytes, bsp_basic_tim.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; SetTctype &rArr; Disp_Type &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUnit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTctype
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSTctype
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[23d]"></a>TIM8_PWMOUTPUT_Config</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, bsp_basic_tim.o(i.TIM8_PWMOUTPUT_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TIM8_PWMOUTPUT_Config &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
</UL>

<P><STRONG><a name="[244]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
</UL>

<P><STRONG><a name="[23c]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1a2]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_PWMOUTPUT_Config
</UL>

<P><STRONG><a name="[bb]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEEPCHECK
</UL>

<P><STRONG><a name="[1a3]"></a>TIM_DeInit</STRONG> (Thumb, 284 bytes, Stack size 8 bytes, stm32f4xx_tim.o(i.TIM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[23b]"></a>TIM_GetITStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[1a4]"></a>TIM_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[240]"></a>TIM_OC1Init</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_PWMOUTPUT_Config
</UL>

<P><STRONG><a name="[23f]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_PWMOUTPUT_Config
</UL>

<P><STRONG><a name="[242]"></a>TIM_OC3Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
</UL>

<P><STRONG><a name="[19c]"></a>TIM_PWMOUTPUT_Config</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, bsp_basic_tim.o(i.TIM_PWMOUTPUT_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TIM_PWMOUTPUT_Config &rArr; TIM_OC3Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBrt
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[23e]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_PWMOUTPUT_Config
</UL>

<P><STRONG><a name="[243]"></a>TIMx_Configuration</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, bsp_basic_tim.o(i.TIMx_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIMx_Configuration &rArr; TIM_PWMOUTPUT_Config &rArr; TIM_OC3Init
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_PWMOUTPUT_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>TP_Adjust</STRONG> (Thumb, 624 bytes, Stack size 56 bytes, touchscreen.o(i.TP_Adjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = TP_Adjust &rArr; page_sys &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Save_Adjdata
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Get_Adjdata
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Drow_Touch_Point
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchscreen.o(.data)
</UL>
<P><STRONG><a name="[245]"></a>TP_Drow_Touch_Point</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, touchscreen.o(i.TP_Drow_Touch_Point))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TP_Drow_Touch_Point &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Adjust
</UL>

<P><STRONG><a name="[247]"></a>TP_Get_Adjdata</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, touchscreen.o(i.TP_Get_Adjdata))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Init
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Adjust
</UL>

<P><STRONG><a name="[1f]"></a>TP_Init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, touchscreen.o(i.TP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TP_Init &rArr; Rheostat_ADC_Mode_Config &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XY
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Get_Adjdata
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rheostat_ADC_Mode_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchscreen.o(.data)
</UL>
<P><STRONG><a name="[24b]"></a>TP_Read_AD</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, touchscreen.o(i.TP_Read_AD))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TP_Read_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XOY
</UL>

<P><STRONG><a name="[24d]"></a>TP_Read_XOY</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, touchscreen.o(i.TP_Read_XOY))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TP_Read_XOY &rArr; TP_Read_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_AD
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XY
</UL>

<P><STRONG><a name="[24a]"></a>TP_Read_XY</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, touchscreen.o(i.TP_Read_XY))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TP_Read_XY &rArr; TP_Read_XOY &rArr; TP_Read_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XOY
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XY2
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Init
</UL>

<P><STRONG><a name="[24e]"></a>TP_Read_XY2</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, touchscreen.o(i.TP_Read_XY2))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TP_Read_XY2 &rArr; TP_Read_XY &rArr; TP_Read_XOY &rArr; TP_Read_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XY
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
</UL>

<P><STRONG><a name="[249]"></a>TP_Save_Adjdata</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, touchscreen.o(i.TP_Save_Adjdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TP_Save_Adjdata &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Adjust
</UL>

<P><STRONG><a name="[20]"></a>TP_Scan</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, touchscreen.o(i.TP_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TP_Scan &rArr; TP_Read_XY2 &rArr; TP_Read_XY &rArr; TP_Read_XOY &rArr; TP_Read_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_XY2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchscreen.o(.data)
</UL>
<P><STRONG><a name="[24f]"></a>TempDisplay</STRONG> (Thumb, 16098 bytes, Stack size 48 bytes, main.o(i.TempDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = TempDisplay &rArr; DISP_TEMP_L &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_disp
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_L
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_S
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_TEMP_M
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INS
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_limits
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEEPCHECK
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AVGCAL
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[252]"></a>TouchHandle</STRONG> (Thumb, 9808 bytes, Stack size 56 bytes, touchscreen.o(i.TouchHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = TouchHandle &rArr; page_graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_his
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_year
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_sec
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_mon
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_min
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_hour
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plus_day
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_year
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_sec
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_mon
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_min
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_hour
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minus_day
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime2
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawtime
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawlang
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate2
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawdate
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTouch
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawDim
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBrt
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonSound
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichSml
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichMid
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChannelSwtichBig
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data_Man
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Block_Rec
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[253]"></a>Touch_GPIO_Config</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, touchscreen.o(i.Touch_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Touch_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[254]"></a>UARTRECHANDLE</STRONG> (Thumb, 726 bytes, Stack size 56 bytes, main.o(i.UARTRECHANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = UARTRECHANDLE &rArr; DrawTime &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_graph
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_home
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_His_Data
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTime
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_INS
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBrt
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1bc]"></a>UP_HANDLE</STRONG> (Thumb, 10692 bytes, Stack size 192 bytes, bsp_key.o(i.UP_HANDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = UP_HANDLE &rArr; Draw_His_Index &rArr; Read_Index &rArr; SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_off
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_48
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_M
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawType
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Handle
</UL>

<P><STRONG><a name="[51]"></a>USART1_IRQHandler</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, stm32f4xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = USART1_IRQHandler &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[25b]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[139]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[1a5]"></a>USART_DeInit</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[27e]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>

<P><STRONG><a name="[25a]"></a>USART_GetITStatus</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[138]"></a>USART_ITConfig</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[135]"></a>USART_Init</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
</UL>

<P><STRONG><a name="[25c]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[27d]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>

<P><STRONG><a name="[26f]"></a>USBD_ClrCfg</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_ClrCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_ClrCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
</UL>

<P><STRONG><a name="[25e]"></a>USBD_CtlContinueRx</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbd_ioreq.o(i.USBD_CtlContinueRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBD_CtlContinueRx &rArr; DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataOutStage
</UL>

<P><STRONG><a name="[25f]"></a>USBD_CtlContinueSendData</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbd_ioreq.o(i.USBD_CtlContinueSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBD_CtlContinueSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage
</UL>

<P><STRONG><a name="[260]"></a>USBD_CtlError</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usbd_req.o(i.USBD_CtlError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_CtlError &rArr; DCD_EP_Stall
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_Setup
</UL>

<P><STRONG><a name="[261]"></a>USBD_CtlReceiveStatus</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_ioreq.o(i.USBD_CtlReceiveStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBD_CtlReceiveStatus &rArr; DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage
</UL>

<P><STRONG><a name="[262]"></a>USBD_CtlSendData</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_ioreq.o(i.USBD_CtlSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_Setup
</UL>

<P><STRONG><a name="[263]"></a>USBD_CtlSendStatus</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_ioreq.o(i.USBD_CtlSendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetFeature
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataOutStage
</UL>

<P><STRONG><a name="[277]"></a>USBD_GetString</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_GetString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_GetString
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_SerialStrDescriptor
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_ProductStrDescriptor
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_ManufacturerStrDescriptor
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_InterfaceStrDescriptor
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_ConfigStrDescriptor
</UL>

<P><STRONG><a name="[16]"></a>USBD_HID_DataOut</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbd_hid_core.o(i.USBD_HID_DataOut))
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[265]"></a>USBD_HID_SendReport</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbd_hid_core.o(i.USBD_HID_SendReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBD_HID_SendReport &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
</UL>

<P><STRONG><a name="[266]"></a>USBD_Init</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, usbd_core.o(i.USBD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USBD_Init &rArr; DCD_Init &rArr; USB_OTG_CoreInitDev &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d8]"></a>USBD_OTG_EP1IN_ISR_Handler</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, usb_dcd_int.o(i.USBD_OTG_EP1IN_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBD_OTG_EP1IN_ISR_Handler &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_WriteEmptyTxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_EP1_IN_IRQHandler
</UL>

<P><STRONG><a name="[1d9]"></a>USBD_OTG_EP1OUT_ISR_Handler</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, usb_dcd_int.o(i.USBD_OTG_EP1OUT_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_OTG_EP1OUT_ISR_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_EP1_OUT_IRQHandler
</UL>

<P><STRONG><a name="[1d7]"></a>USBD_OTG_ISR_Handler</STRONG> (Thumb, 370 bytes, Stack size 32 bytes, usb_dcd_int.o(i.USBD_OTG_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USBD_OTG_ISR_Handler &rArr; DCD_HandleInEP_ISR &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUsbReset_ISR
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUSBSuspend_ISR
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleRxStatusQueueLevel_ISR
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadCoreItr
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsDeviceMode
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_GetDeviceSpeed
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_IRQHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[272]"></a>USBD_ParseSetupRequest</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, usbd_req.o(i.USBD_ParseSetupRequest))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[270]"></a>USBD_SetCfg</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_SetCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_SetCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
</UL>

<P><STRONG><a name="[273]"></a>USBD_StdDevReq</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, usbd_req.o(i.USBD_StdDevReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_StdDevReq &rArr; USBD_SetConfig &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetFeature
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_SetAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[275]"></a>USBD_StdEPReq</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_StdEPReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBD_StdEPReq &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_ClrStall
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[274]"></a>USBD_StdItfReq</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_StdItfReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBD_StdItfReq &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[1d]"></a>USBD_USR_ConfigStrDescriptor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_desc.o(i.USBD_USR_ConfigStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_USR_ConfigStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>USBD_USR_DeviceConfigured</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceConfigured))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>USBD_USR_DeviceConnected</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceConnected))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>USBD_USR_DeviceDescriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_desc.o(i.USBD_USR_DeviceDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>USBD_USR_DeviceDisconnected</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceDisconnected))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>USBD_USR_DeviceReset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceReset))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>USBD_USR_DeviceResumed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceResumed))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>USBD_USR_DeviceSuspended</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceSuspended))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>USBD_USR_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_Init))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>USBD_USR_InterfaceStrDescriptor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_desc.o(i.USBD_USR_InterfaceStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_USR_InterfaceStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>USBD_USR_LangIDStrDescriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_desc.o(i.USBD_USR_LangIDStrDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>USBD_USR_ManufacturerStrDescriptor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_desc.o(i.USBD_USR_ManufacturerStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_USR_ManufacturerStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>USBD_USR_ProductStrDescriptor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbd_desc.o(i.USBD_USR_ProductStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_USR_ProductStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>USBD_USR_SerialStrDescriptor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbd_desc.o(i.USBD_USR_SerialStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_USR_SerialStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_desc.o(.data)
</UL>
<P><STRONG><a name="[268]"></a>USB_OTG_BSP_EnableInterrupt</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, usb_bsp.o(i.USB_OTG_BSP_EnableInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_OTG_BSP_EnableInterrupt &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
</UL>

<P><STRONG><a name="[267]"></a>USB_OTG_BSP_Init</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, usb_bsp.o(i.USB_OTG_BSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_OTG_BSP_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
</UL>

<P><STRONG><a name="[279]"></a>USB_OTG_BSP_mDelay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_bsp.o(i.USB_OTG_BSP_mDelay))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SetCurrentMode
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>

<P><STRONG><a name="[27c]"></a>USB_OTG_BSP_uDelay</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb_bsp.o(i.USB_OTG_BSP_uDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreReset
</UL>

<P><STRONG><a name="[10d]"></a>USB_OTG_CoreInit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_CoreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_OTG_CoreInit &rArr; USB_OTG_CoreReset &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreReset
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[10f]"></a>USB_OTG_CoreInitDev</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_CoreInitDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_OTG_CoreInitDev &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_InitDevSpeed
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableDevInt
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[10c]"></a>USB_OTG_DisableGlobalInt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_DisableGlobalInt))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[26c]"></a>USB_OTG_EP0Activate</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_EP0Activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_EP0Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[fc]"></a>USB_OTG_EP0StartXfer</STRONG> (Thumb, 182 bytes, Stack size 20 bytes, usb_core.o(i.USB_OTG_EP0StartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
</UL>

<P><STRONG><a name="[102]"></a>USB_OTG_EP0_OutStart</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_EP0_OutStart))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUsbReset_ISR
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
</UL>

<P><STRONG><a name="[f9]"></a>USB_OTG_EPActivate</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, usb_core.o(i.USB_OTG_EPActivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_EPActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Open
</UL>

<P><STRONG><a name="[f4]"></a>USB_OTG_EPClearStall</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_EPClearStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_EPClearStall
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_ClrStall
</UL>

<P><STRONG><a name="[f2]"></a>USB_OTG_EPDeactivate</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, usb_core.o(i.USB_OTG_EPDeactivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_EPDeactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Close
</UL>

<P><STRONG><a name="[fe]"></a>USB_OTG_EPSetStall</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_EPSetStall))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
</UL>

<P><STRONG><a name="[fb]"></a>USB_OTG_EPStartXfer</STRONG> (Thumb, 288 bytes, Stack size 20 bytes, usb_core.o(i.USB_OTG_EPStartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
</UL>

<P><STRONG><a name="[27b]"></a>USB_OTG_EnableDevInt</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, usb_core.o(i.USB_OTG_EnableDevInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_EnableDevInt
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitDev
</UL>

<P><STRONG><a name="[110]"></a>USB_OTG_EnableGlobalInt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_EnableGlobalInt))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[f7]"></a>USB_OTG_FlushRxFifo</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_FlushRxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_FlushRxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Flush
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitDev
</UL>

<P><STRONG><a name="[f6]"></a>USB_OTG_FlushTxFifo</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_FlushTxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUsbReset_ISR
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Flush
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitDev
</UL>

<P><STRONG><a name="[26d]"></a>USB_OTG_GetDeviceSpeed</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_GetDeviceSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[27a]"></a>USB_OTG_InitDevSpeed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_InitDevSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitDev
</UL>

<P><STRONG><a name="[269]"></a>USB_OTG_IsDeviceMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_IsDeviceMode))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[26a]"></a>USB_OTG_ReadCoreItr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadCoreItr))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[101]"></a>USB_OTG_ReadDevAllInEPItr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadDevAllInEPItr))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
</UL>

<P><STRONG><a name="[105]"></a>USB_OTG_ReadDevAllOutEp_itr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadDevAllOutEp_itr))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
</UL>

<P><STRONG><a name="[106]"></a>USB_OTG_ReadDevOutEP_itr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadDevOutEP_itr))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
</UL>

<P><STRONG><a name="[108]"></a>USB_OTG_ReadPacket</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_ReadPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleRxStatusQueueLevel_ISR
</UL>

<P><STRONG><a name="[10b]"></a>USB_OTG_SelectCore</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_SelectCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_SelectCore
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[10e]"></a>USB_OTG_SetCurrentMode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_SetCurrentMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_SetCurrentMode
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[111]"></a>USB_OTG_WritePacket</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, usb_core.o(i.USB_OTG_WritePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_WriteEmptyTxFifo
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPStartXfer
</UL>

<P><STRONG><a name="[27]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[237]"></a>Usart_SendByte</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_debug_usart.o(i.Usart_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Usart_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUnit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTctype
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSTctype
</UL>

<P><STRONG><a name="[27f]"></a>UsbDataHandle</STRONG> (Thumb, 2186 bytes, Stack size 48 bytes, main.o(i.UsbDataHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = UsbDataHandle &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SendReport
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[280]"></a>Utest</STRONG> (Thumb, 462 bytes, Stack size 240 bytes, bsp_key.o(i.Utest))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Utest &rArr; CH376FileCreatePath &rArr; CH376FileOpenDir &rArr; CH376FileOpen &rArr; CH376SetFileName &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileOpenPath
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileCreatePath
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376FileClose
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4]"></a>Wait376Interrupt</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, filesys.o(i.Wait376Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376GetIntStatus
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query376Interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
</UL>

<P><STRONG><a name="[17d]"></a>Write_Block_Rec</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fileoperate.o(i.Write_Block_Rec))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Write_Block_Rec &rArr; SD_WriteBlock &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffHandle
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[257]"></a>Write_His_Data</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, fileoperate.o(i.Write_His_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Write_His_Data &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
</UL>

<P><STRONG><a name="[187]"></a>Write_His_Data_Man</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, fileoperate.o(i.Write_His_Data_Man))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Write_His_Data_Man &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffHandle
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
</UL>

<P><STRONG><a name="[1b0]"></a>XYCAL</STRONG> (Thumb, 342 bytes, Stack size 24 bytes, touchscreen.o(i.XYCAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = XYCAL &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY8_HANDLE
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_HANDLE
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_HANDLE
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_HANDLE
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_HANDLE
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_HANDLE
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_HANDLE
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
</UL>

<P><STRONG><a name="[282]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2a5]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[1e2]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>

<P><STRONG><a name="[2a6]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[2a7]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[284]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2a8]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[123]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_disp
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;graph_his
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_off
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_graph
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sysinfo
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sys
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Factory
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Handle
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTime
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_off
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_on
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPSDDATA
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXPPROCESS
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[2a9]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[2aa]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[98]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[2ab]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[167]"></a>__hardfp_atof</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, atof.o(i.__hardfp_atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[248]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Adjust
</UL>

<P><STRONG><a name="[285]"></a>__read_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__read_errno))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[2ac]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2ad]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2ae]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[286]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[b0]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[195]"></a>back_his</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, history.o(i.back_his))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = back_his &rArr; Draw_His_Index &rArr; Read_Index &rArr; SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhishmenu
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD1
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Handle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[17b]"></a>brt_set</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, bsp_key.o(i.brt_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = brt_set &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[251]"></a>cal_disp</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, bsp_key.o(i.cal_disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = cal_disp &rArr; LCD_DisplayStringLine &rArr; LCD_DisplayChinese &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
</UL>

<P><STRONG><a name="[16a]"></a>clear_input</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bsp_key.o(i.clear_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = clear_input &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_on
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_on
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_on
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[b9]"></a>del_num</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, bsp_key.o(i.del_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = del_num &rArr; input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_num
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BACK_HANDLE
</UL>

<P><STRONG><a name="[b8]"></a>del_search</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, bsp_key.o(i.del_search))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = del_search &rArr; DISP_CNL_S &rArr; DISP_INPUT &rArr; LCD_DrawChinese
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BACK_HANDLE
</UL>

<P><STRONG><a name="[24c]"></a>delay_1us</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bsp_systick.o(i.delay_1us))
<BR><BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Read_AD
</UL>

<P><STRONG><a name="[246]"></a>delay_us</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, bsp_systick.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Scan
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Adjust
</UL>

<P><STRONG><a name="[17c]"></a>dim_set</STRONG> (Thumb, 364 bytes, Stack size 40 bytes, bsp_key.o(i.dim_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = dim_set &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[127]"></a>focus_off</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_key.o(i.focus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = focus_off
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[129]"></a>focus_off1</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp_key.o(i.focus_off1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = focus_off1
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[125]"></a>focus_on</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_key.o(i.focus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = focus_on
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[12b]"></a>focus_on1</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_key.o(i.focus_on1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = focus_on1
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_set
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dim_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brt_set
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_end
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[8d]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_debug_usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[255]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
</UL>

<P><STRONG><a name="[169]"></a>graph_his</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, history.o(i.graph_his))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = graph_his &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_His_Data
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhisgraph
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Graph
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD1
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[185]"></a>his_gset</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, graphset.o(i.his_gset))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = his_gset &rArr; yhfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhisgsethmenu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[121]"></a>input_num</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, bsp_key.o(i.input_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY9_HANDLE
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY8_HANDLE
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_HANDLE
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_HANDLE
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_HANDLE
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_HANDLE
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_HANDLE
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_HANDLE
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_HANDLE
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOT_HANDLE
</UL>

<P><STRONG><a name="[1ae]"></a>input_pass</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, bsp_key.o(i.input_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = input_pass &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_factory
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY9_HANDLE
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY8_HANDLE
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_HANDLE
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_HANDLE
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_HANDLE
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_HANDLE
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_HANDLE
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_HANDLE
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_HANDLE
</UL>

<P><STRONG><a name="[194]"></a>input_search</STRONG> (Thumb, 684 bytes, Stack size 24 bytes, bsp_key.o(i.input_search))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = input_search &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY9_HANDLE
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY8_HANDLE
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_HANDLE
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_HANDLE
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_HANDLE
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_HANDLE
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_HANDLE
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_HANDLE
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_HANDLE
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[87]"></a>main</STRONG> (Thumb, 540 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = main &rArr; Key_Function &rArr; Key_Handle &rArr; ENTER_HANDLE &rArr; graph_his &rArr; Draw_His_Graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Cmd
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Sflag
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utest
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_GPIO_Config
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadID
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadDeviceID
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_Init
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Index
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Block_Rec
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Show
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeAndDate_Set
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CLK_Config
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LayerInit
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_GPIO_Config
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Function
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBattery
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_USART_Config
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376_GPIO_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_GPIO_Config
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udisk_scan
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempDisplay
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_flag
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Flash_Init_Handle
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffHandle
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[256]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbDataHandle
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
</UL>

<P><STRONG><a name="[12e]"></a>maxfocus_off</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, bsp_key.o(i.maxfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = maxfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[b4]"></a>maxfocus_on</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, bsp_key.o(i.maxfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = maxfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_cal
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_HANDLE
</UL>

<P><STRONG><a name="[12d]"></a>minfocus_off</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, bsp_key.o(i.minfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = minfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIGHT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[12c]"></a>minfocus_on</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, bsp_key.o(i.minfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = minfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_sep
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEFT_HANDLE
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[181]"></a>minus_day</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_key.o(i.minus_day))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = minus_day &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[183]"></a>minus_hour</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_key.o(i.minus_hour))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = minus_hour &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[18c]"></a>minus_min</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_key.o(i.minus_min))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = minus_min &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
</UL>

<P><STRONG><a name="[18b]"></a>minus_mon</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_key.o(i.minus_mon))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = minus_mon &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
</UL>

<P><STRONG><a name="[180]"></a>minus_sec</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_key.o(i.minus_sec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = minus_sec &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[182]"></a>minus_year</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_key.o(i.minus_year))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = minus_year &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[259]"></a>multifocus_off</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, bsp_key.o(i.multifocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = multifocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
</UL>

<P><STRONG><a name="[130]"></a>multifocus_on</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, bsp_key.o(i.multifocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = multifocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[18d]"></a>page_cal</STRONG> (Thumb, 986 bytes, Stack size 32 bytes, calibarate.o(i.page_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = page_cal &rArr; maxfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_on
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_disp
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawcalmenu
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
</UL>

<P><STRONG><a name="[b3]"></a>page_factory</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, factory.o(i.page_factory))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = page_factory &rArr; del_num &rArr; input_num &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysinfomenu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_pass
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;del_num
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Factory
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_HANDLE
</UL>

<P><STRONG><a name="[184]"></a>page_graph</STRONG> (Thumb, 5592 bytes, Stack size 184 bytes, graph.o(i.page_graph))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = page_graph &rArr; DrawGridLine &rArr; LCD_DrawRect &rArr; LCD_DrawLine &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawgraphmenu
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawGridLine
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD1
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
</UL>

<P><STRONG><a name="[193]"></a>page_gset</STRONG> (Thumb, 270 bytes, Stack size 16 bytes, graphset.o(i.page_gset))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = page_gset &rArr; yhfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ylfocus_off
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yhfocus_on
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multifocus_off
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawgsethmenu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[16d]"></a>page_his</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, history.o(i.page_his))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = page_his &rArr; Draw_His_Index &rArr; Read_Index &rArr; SD_ReadBlock &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhishmenu
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_His_Index
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD1
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_HANDLE
</UL>

<P><STRONG><a name="[b6]"></a>page_home</STRONG> (Thumb, 4186 bytes, Stack size 40 bytes, home.o(i.page_home))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = page_home &rArr; Disp_Type &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine_48
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawhomemenu
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD2
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSD1
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_M
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_AVG
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Frame
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Disp_Type
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRECHANDLE
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_HANDLE
</UL>

<P><STRONG><a name="[191]"></a>page_sep</STRONG> (Thumb, 926 bytes, Stack size 32 bytes, separation.o(i.page_sep))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = page_sep &rArr; minfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_on
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minfocus_off
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxfocus_off
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsptmenu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[18e]"></a>page_set</STRONG> (Thumb, 852 bytes, Stack size 32 bytes, settings.o(i.page_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = page_set &rArr; stimefocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stimefocus_off
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsetmenu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUnit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CNL_S
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC4_HANDLE
</UL>

<P><STRONG><a name="[177]"></a>page_sys</STRONG> (Thumb, 700 bytes, Stack size 24 bytes, system.o(i.page_sys))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = page_sys &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Adjust
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[190]"></a>page_sysinfo</STRONG> (Thumb, 482 bytes, Stack size 32 bytes, sysinfo.o(i.page_sysinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = page_sysinfo &rArr; DrawMenu &rArr; DrawUdisk2 &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysinfomenu
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC5_HANDLE
</UL>

<P><STRONG><a name="[178]"></a>plus_day</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_key.o(i.plus_day))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = plus_day &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[17a]"></a>plus_hour</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bsp_key.o(i.plus_hour))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = plus_hour &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[189]"></a>plus_min</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bsp_key.o(i.plus_min))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = plus_min &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
</UL>

<P><STRONG><a name="[188]"></a>plus_mon</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_key.o(i.plus_mon))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = plus_mon &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC3_HANDLE
</UL>

<P><STRONG><a name="[175]"></a>plus_sec</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bsp_key.o(i.plus_sec))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = plus_sec &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[179]"></a>plus_year</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bsp_key.o(i.plus_year))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = plus_year &rArr; RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[291]"></a>power_on</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, power_on.o(i.power_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = power_on &rArr; LCD_Clear &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTransparency
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLayer
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[258]"></a>stimefocus_off</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, bsp_key.o(i.stimefocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = stimefocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_set
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
</UL>

<P><STRONG><a name="[12a]"></a>stimefocus_on</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, bsp_key.o(i.stimefocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = stimefocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[176]"></a>touch_set</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, bsp_key.o(i.touch_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touch_set &rArr; Save_flag &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsysmenu
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_flag
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawMenu
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_on1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_off1
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchHandle
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC2_HANDLE
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUNC1_HANDLE
</UL>

<P><STRONG><a name="[292]"></a>udisk_scan</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(i.udisk_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = udisk_scan &rArr; CH376DiskConnect &rArr; CH376SendCmdWaitInt &rArr; Wait376Interrupt &rArr; CH376GetIntStatus &rArr; xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawUdisk1
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376DiskMount
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376DiskConnect
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c3]"></a>xEndCH376Cmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ch376.o(i.xEndCH376Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteVar32
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteReqBlock
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar8
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376Read32bitDat
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376GetIntStatus
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
</UL>

<P><STRONG><a name="[d6]"></a>xReadCH376Data</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ch376.o(i.xReadCH376Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xReadCH376Data &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteReqBlock
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar8
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376Read32bitDat
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376GetIntStatus
</UL>

<P><STRONG><a name="[c1]"></a>xWriteCH376Cmd</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ch376.o(i.xWriteCH376Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xWriteCH376Cmd &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteVar32
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteReqBlock
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdWaitInt
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar8
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar32
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376GetIntStatus
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
</UL>

<P><STRONG><a name="[c2]"></a>xWriteCH376Data</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ch376.o(i.xWriteCH376Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xWriteCH376Data &rArr; SPIx_ReadWriteByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CH376
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteVar32
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376WriteReqBlock
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SetFileName
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376SendCmdDatWaitInt
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar8
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ReadVar32
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteWrite
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH376ByteLocate
</UL>

<P><STRONG><a name="[131]"></a>yhfocus_off</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, bsp_key.o(i.yhfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = yhfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[168]"></a>yhfocus_on</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, bsp_key.o(i.yhfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = yhfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
</UL>

<P><STRONG><a name="[12f]"></a>ylfocus_off</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, bsp_key.o(i.ylfocus_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ylfocus_off &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;page_gset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;his_gset
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>

<P><STRONG><a name="[132]"></a>ylfocus_on</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, bsp_key.o(i.ylfocus_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ylfocus_on &rArr; DrawInstruction &rArr; LCD_DrawFullRect &rArr; DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTextColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColors
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayStringLine
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawInstruction
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_input
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UP_HANDLE
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_HANDLE
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOWN_HANDLE
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[23a]"></a>SetSysClock</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1e5]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>

<P><STRONG><a name="[1e9]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[278]"></a>USB_OTG_CoreReset</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_CoreReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_CoreReset &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>

<P><STRONG><a name="[100]"></a>DCD_HandleInEP_ISR</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleInEP_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = DCD_HandleInEP_ISR &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_WriteEmptyTxFifo
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadDevAllInEPItr
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[104]"></a>DCD_HandleOutEP_ISR</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleOutEP_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DCD_HandleOutEP_ISR
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadDevOutEP_itr
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadDevAllOutEp_itr
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[107]"></a>DCD_HandleRxStatusQueueLevel_ISR</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_HandleRxStatusQueueLevel_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DCD_HandleRxStatusQueueLevel_ISR &rArr; USB_OTG_ReadPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[26b]"></a>DCD_HandleUSBSuspend_ISR</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_HandleUSBSuspend_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DCD_HandleUSBSuspend_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[109]"></a>DCD_HandleUsbReset_ISR</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_HandleUsbReset_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DCD_HandleUsbReset_ISR &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[103]"></a>DCD_WriteEmptyTxFifo</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, usb_dcd_int.o(i.DCD_WriteEmptyTxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_EP1IN_ISR_Handler
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
</UL>

<P><STRONG><a name="[1]"></a>USBD_DataInStage</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_DataInStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBD_DataInStage &rArr; USBD_CtlReceiveStatus &rArr; DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>USBD_DataOutStage</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_DataOutStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBD_DataOutStage &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueRx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>USBD_DevConnected</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_DevConnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_DevConnected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>USBD_DevDisconnected</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_DevDisconnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_DevDisconnected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>USBD_IsoINIncomplete</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_IsoINIncomplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_IsoINIncomplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>USBD_IsoOUTIncomplete</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_IsoOUTIncomplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_IsoOUTIncomplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>USBD_Reset</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBD_Reset &rArr; DCD_EP_Open &rArr; USB_OTG_EPActivate
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>USBD_Resume</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_Resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>USBD_SOF</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_SOF))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_SOF
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>USBD_SetupStage</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_SetupStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_SetupStage &rArr; USBD_StdDevReq &rArr; USBD_SetConfig &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ParseSetupRequest
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>USBD_Suspend</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_Suspend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[264]"></a>USBD_GetDescriptor</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_GetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[26e]"></a>USBD_SetConfig</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USBD_SetConfig &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetCfg
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[271]"></a>USBD_SetFeature</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, usbd_req.o(i.USBD_SetFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBD_SetFeature &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[15]"></a>USBD_HID_DataIn</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbd_hid_core.o(i.USBD_HID_DataIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_HID_DataIn &rArr; DCD_EP_Flush &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>USBD_HID_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_hid_core.o(i.USBD_HID_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBD_HID_DeInit &rArr; DCD_EP_Close &rArr; USB_OTG_EPDeactivate
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>USBD_HID_GetCfgDesc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_hid_core.o(i.USBD_HID_GetCfgDesc))
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>USBD_HID_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbd_hid_core.o(i.USBD_HID_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBD_HID_Init &rArr; DCD_EP_Open &rArr; USB_OTG_EPActivate
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>USBD_HID_Setup</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, usbd_hid_core.o(i.USBD_HID_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBD_HID_Setup &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[1ac]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpBoot
</UL>

<P><STRONG><a name="[1f6]"></a>Rheostat_ADC_Mode_Config</STRONG> (Thumb, 198 bytes, Stack size 128 bytes, touchscreen.o(i.Rheostat_ADC_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Rheostat_ADC_Mode_Config &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMARequestAfterLastTransferCmd
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Init
</UL>

<P><STRONG><a name="[204]"></a>SDRAM_GPIO_Config</STRONG> (Thumb, 880 bytes, Stack size 48 bytes, bsp_sdram.o(i.SDRAM_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SDRAM_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[207]"></a>SDRAM_InitSequence</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, bsp_sdram.o(i.SDRAM_InitSequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDRAM_InitSequence
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SetRefreshCount
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMCmdConfig
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[1c7]"></a>LCD_GPIO_Config</STRONG> (Thumb, 666 bytes, Stack size 48 bytes, bsp_lcd.o(i.LCD_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCD_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[230]"></a>SPI_TIMEOUT_UserCallback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_spi_flash.o(i.SPI_TIMEOUT_UserCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[232]"></a>SPI_TIMEOUT_UserCallback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ch376.o(i.SPI_TIMEOUT_UserCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>

<P><STRONG><a name="[eb]"></a>CmdResp1Error</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.CmdResp1Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Erase
</UL>

<P><STRONG><a name="[ef]"></a>CmdResp2Error</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bsp_sdio_sd.o(i.CmdResp2Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CmdResp2Error
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[f0]"></a>CmdResp6Error</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, bsp_sdio_sd.o(i.CmdResp6Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CmdResp6Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[196]"></a>FindSCR</STRONG> (Thumb, 296 bytes, Stack size 48 bytes, bsp_sdio_sd.o(i.FindSCR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ReadData
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[1a1]"></a>IsCardProgramming</STRONG> (Thumb, 314 bytes, Stack size 24 bytes, bsp_sdio_sd.o(i.IsCardProgramming))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IsCardProgramming &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Erase
</UL>

<P><STRONG><a name="[200]"></a>SDEnWideBus</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, bsp_sdio_sd.o(i.SDEnWideBus))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[287]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[283]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[28a]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[289]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[a4]"></a>_local_sscanf</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[ad]"></a>_fp_value</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
